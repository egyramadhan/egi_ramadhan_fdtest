// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  name             String    @db.VarChar(100)
  email            String    @unique @db.VarChar(255)
  passwordHash     String    @map("password_hash")
  emailVerifiedAt  DateTime? @map("email_verified_at")
  isAdmin          Boolean   @default(false) @map("is_admin")
  lastLoginAt      DateTime? @map("last_login_at")
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  // Relations
  books                 Book[]
  verificationTokens    VerificationToken[]
  passwordResetTokens   PasswordResetToken[]

  @@map("users")
}

model Book {
  id           String   @id @default(cuid())
  title        String   @db.VarChar(255)
  author       String   @db.VarChar(255)
  description  String?  @db.Text
  thumbnailUrl String?  @map("thumbnail_url") @db.VarChar(500)
  rating       Float?   @db.DoublePrecision
  createdBy    String   @map("created_by")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  creator User @relation(fields: [createdBy], references: [id], onDelete: Cascade)

  @@map("books")
}

model VerificationToken {
  id        String              @id @default(cuid())
  userId    String              @map("user_id")
  token     String              @unique
  type      VerificationTokenType
  expiresAt DateTime            @map("expires_at")
  usedAt    DateTime?           @map("used_at")
  createdAt DateTime            @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("verification_tokens")
}

model PasswordResetToken {
  id        String    @id @default(cuid())
  userId    String    @map("user_id")
  token     String    @unique
  expiresAt DateTime  @map("expires_at")
  usedAt    DateTime? @map("used_at")
  createdAt DateTime  @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_tokens")
}

enum VerificationTokenType {
  EMAIL_VERIFICATION
  PASSWORD_RESET

  @@map("verification_token_type")
}